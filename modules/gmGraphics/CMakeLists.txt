CMAKE_MINIMUM_REQUIRED(VERSION 2.8.3)


SET (MODULE_INCLUDE_DIRS CACHE INTERNAL "The list of include folders to search for the graphics module.")
SET (MODULE_LIBS CACHE INTERNAL "The list of libraries that the graphics module should link against.")

SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR}/include)
SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${CMAKE_CURRENT_BINARY_DIR}/include)


SET (MODULE_LIBS ${MODULE_LIBS} gmCore)
SET (MODULE_LIBS ${MODULE_LIBS} gmTypes)
SET (MODULE_LIBS ${MODULE_LIBS} gmTrack)

FIND_PACKAGE (Eigen3 QUIET NO_MODULE)
IF (Eigen3_FOUND)
  SET(HAVE_Eigen3 1)
  OPTION(gramods_ENABLE_Eigen3 "Enable functionality that requires Eigen3" ON)
  IF (NOT gramods_ENABLE_Eigen3)
    MESSAGE (STATUS "Not including gmGraphics - requires Eigen3 (disabled)")
    RETURN()
  ENDIF()
ELSE()
  MESSAGE (STATUS "Not including gmGraphics - requires Eigen3")
  RETURN()
ENDIF()
SET (MODULE_LIBS ${MODULE_LIBS} Eigen3::Eigen)

FIND_PACKAGE(GLEW)
IF (GLEW_FOUND)
  SET(HAVE_GLEW 1)
  OPTION(gramods_ENABLE_GLEW "Enable functionality that requires GLEW" ON)
  IF (NOT gramods_ENABLE_GLEW)
    MESSAGE (STATUS "Not including gmGraphics - requires GLEW (disabled)")
    RETURN()
  ENDIF()
ELSE()
  MESSAGE (STATUS "Not including gmGraphics - requires GLEW")
  RETURN()
ENDIF()
SET (MODULE_LIBS ${MODULE_LIBS} ${GLEW_LIBRARIES})
SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${GLEW_INCLUDE_DIR})

FIND_PACKAGE(SDL2)
IF(SDL2_FOUND)
  SET(HAVE_SDL2 1)
  OPTION(gramods_ENABLE_SDL2 "Enable functionality that requires SDL2" ON)
  IF(gramods_ENABLE_SDL2)
    SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${SDL2_INCLUDE_DIR})
    SET (MODULE_LIBS ${MODULE_LIBS} ${SDL2_LIBRARY})
  ENDIF(gramods_ENABLE_SDL2)
ENDIF(SDL2_FOUND)

FIND_PACKAGE (libuvc)
IF(libuvc_FOUND)
  SET(HAVE_libuvc 1)
  OPTION(gramods_ENABLE_libuvc "" ON)
  IF (gramods_ENABLE_libuvc)
    SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${libuvc_INCLUDE_DIR})
    SET (MODULE_LIBS ${MODULE_LIBS} ${libuvc_LIBRARIES})
  ENDIF(gramods_ENABLE_libuvc)
ENDIF(libuvc_FOUND)

FIND_PACKAGE(FreeImage)
IF(FreeImage_FOUND)
  SET(HAVE_FreeImage 1)
  OPTION(gramods_ENABLE_FreeImage "" ON)
  IF (gramods_ENABLE_FreeImage)
    SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${FreeImage_INCLUDE_DIR})
    SET (MODULE_LIBS ${MODULE_LIBS} ${FreeImage_LIBRARIES})
  ENDIF(gramods_ENABLE_FreeImage)
ENDIF(FreeImage_FOUND)

CONFIGURE_FILE(
  ${CMAKE_CURRENT_SOURCE_DIR}/include/gmGraphics/config_cmake.hh
  ${CMAKE_CURRENT_BINARY_DIR}/include/gmGraphics/config.hh)


FILE(GLOB_RECURSE HEADERS include/*.hh)
FILE(GLOB_RECURSE SOURCES src/*.cpp)

SOURCE_GROUP("headers" FILES ${HEADERS})
SOURCE_GROUP("sources" FILES ${SOURCES})

ADD_LIBRARY(gmGraphics SHARED ${HEADERS} ${SOURCES})

TARGET_INCLUDE_DIRECTORIES(gmGraphics PUBLIC ${MODULE_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(gmGraphics ${MODULE_LIBS})

SET_PROPERTY(TARGET gmGraphics PROPERTY CXX_STANDARD 14)

INSTALL(TARGETS gmGraphics
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
INSTALL(DIRECTORY include/
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
