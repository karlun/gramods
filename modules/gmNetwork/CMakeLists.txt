CMAKE_MINIMUM_REQUIRED(VERSION 2.8.3)


SET (MODULE_INCLUDE_DIRS CACHE INTERNAL "The list of include folders to search for the network module.")
SET (MODULE_LIBS CACHE INTERNAL "The list of libraries that the network module should link against.")

LIST (APPEND MODULE_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/include)
LIST (APPEND MODULE_INCLUDE_DIRS ${CMAKE_CURRENT_BINARY_DIR}/include)


LIST (APPEND MODULE_LIBS gmCore)

# Boost ASIO (headers only)
FIND_PACKAGE (ASIO)
IF (ASIO_FOUND)
  SET(HAVE_ASIO 1)
  OPTION(gramods_ENABLE_ASIO "Enable functionality that requires ASIO" ON)
  IF (NOT gramods_ENABLE_ASIO)
    MESSAGE (STATUS "Not including gmNetwork - requires ASIO (disabled)")
    RETURN()
  ENDIF()
ELSE()
  MESSAGE (STATUS "Not including gmNetwork - requires ASIO")
  RETURN()
ENDIF()
LIST (APPEND MODULE_INCLUDE_DIRS ${ASIO_INCLUDE_DIRS})


OPTION(gramods_ACTIVATE_ASIO_HANDLER_TRACKING
  "Activate ASIO handler tracking and debug output to the standard error stream."
  OFF)

INCLUDE(WinVer)
get_WIN32_WINNT(_WIN32_WINNT)
SET(_WIN32_WINNT "${_WIN32_WINNT}")

CONFIGURE_FILE(
  ${CMAKE_CURRENT_SOURCE_DIR}/include/gmNetwork/config_cmake.hh
  ${CMAKE_CURRENT_BINARY_DIR}/include/gmNetwork/config.hh)


FILE(GLOB_RECURSE HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/include/*.hh)
FILE(GLOB_RECURSE SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)

SOURCE_GROUP("headers" FILES ${HEADERS})
SOURCE_GROUP("sources" FILES ${SOURCES})

ADD_LIBRARY(gmNetwork SHARED ${HEADERS} ${SOURCES})

TARGET_INCLUDE_DIRECTORIES(gmNetwork PUBLIC ${MODULE_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(gmNetwork ${MODULE_LIBS})

SET_PROPERTY(TARGET gmNetwork PROPERTY CXX_STANDARD 14)
SET_PROPERTY(TARGET gmNetwork PROPERTY WINDOWS_EXPORT_ALL_SYMBOLS TRUE)

INSTALL(TARGETS gmNetwork
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
INSTALL(DIRECTORY include/
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
