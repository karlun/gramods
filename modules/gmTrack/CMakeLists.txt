CMAKE_MINIMUM_REQUIRED(VERSION 2.8.3)


SET (MODULE_INCLUDE_DIRS CACHE INTERNAL "The list of include folders to search for the track module.")
SET (MODULE_LIBS CACHE INTERNAL "The list of libraries that the track module should link against.")

SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR}/include)
SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${CMAKE_CURRENT_BINARY_DIR}/include)


SET (MODULE_LIBS ${MODULE_LIBS} gmCore)

FIND_PACKAGE (Eigen3 QUIET NO_MODULE)
IF (NOT Eigen3_FOUND)
  MESSAGE (STATUS "Not including gmTrack - requires Eigen3")
  RETURN()
ENDIF()
SET (MODULE_LIBS ${MODULE_LIBS} Eigen3::Eigen)

FIND_PACKAGE(VRPN)
IF(VRPN_FOUND)
  SET(HAVE_VRPN 1)
  OPTION(gramods_ENABLE_VRPN "Enable functionality that requires VRPN" ON)
  IF (gramods_ENABLE_VRPN)
    SET (MODULE_INCLUDE_DIRS ${MODULE_INCLUDE_DIRS} ${VRPN_INCLUDE_DIR})
    SET (MODULE_LIBS ${MODULE_LIBS} ${VRPN_LIBRARIES})
  ENDIF(gramods_ENABLE_VRPN)
ENDIF(VRPN_FOUND)


CONFIGURE_FILE(
  ${CMAKE_CURRENT_SOURCE_DIR}/include/gmTrack/config_cmake.hh
  ${CMAKE_CURRENT_BINARY_DIR}/include/gmTrack/config.hh)


FILE(GLOB_RECURSE HEADERS include/*.hh)
FILE(GLOB_RECURSE SOURCES src/*.cpp)

SOURCE_GROUP("headers" FILES ${HEADERS})
SOURCE_GROUP("sources" FILES ${SOURCES})

ADD_LIBRARY(gmTrack SHARED ${HEADERS} ${SOURCES})

TARGET_INCLUDE_DIRECTORIES(gmTrack PUBLIC ${MODULE_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(gmTrack ${MODULE_LIBS})

SET_PROPERTY(TARGET gmTrack PROPERTY CXX_STANDARD 14)

INSTALL(TARGETS gmTrack
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
INSTALL(DIRECTORY include/
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
