
stages:
  - build
  - test

BuildMini:
  image: $CI_REGISTRY/karlu20/gramods:20.04-mini
  stage: build
  script:
    - apt-get update
    - DEBIAN_FRONTEND="noninteractive" apt-get -y install cmake build-essential libgtest-dev
    - mkdir build
    - cd build
    - cmake -D gramods_TEST_gmGraphics=OFF ..
    - make
    - make test

BuildMaxi:
  image: $CI_REGISTRY/karlu20/gramods:20.04-maxi
  stage: build
  script:
    - apt-get update
    - DEBIAN_FRONTEND="noninteractive" apt-get -y install cmake git build-essential libgtest-dev libtinyxml2-dev libsdl2-dev libsdl2-ttf-dev libeigen3-dev libglew-dev libasio-dev libopenscenegraph-dev libuvc-dev libfreeimage-dev inkscape pipenv
    - git clone https://github.com/vrpn/vrpn.git
    - mkdir vrpn/build
    - cd vrpn/build; cmake ..
      -D CMAKE_BUILD_TYPE=Release
      -D CMAKE_INSTALL_PREFIX=$(pwd)/../../vrpn-install;
      cd ../..
    - make -C vrpn/build install
    - mkdir build
    - cd build; cmake ..
      -D gramods_TEST_gmGraphics=OFF
      -D CPACK_BINARY_DEB=ON
      -D TinyXML2_DIR:PATH=$(pwd)/../cmake_modules/tinyxml2-shared/
      -D VRPN_DIR:PATH=$(pwd)/../cmake_modules/vrpn-static/
      -D SDL2_DIR:PATH=$(pwd)/../cmake_modules/sdl2-shared/
      -D CMAKE_PREFIX_PATH:PATH=$(pwd)/../vrpn-install/
      -D CPACK_DEBIAN_PACKAGE_DEPENDS="libtinyxml2-6a, libsdl2-2.0-0, libsdl2-ttf-2.0-0, libglew2.1, libopenscenegraph160, libuvc0, libfreeimage3"
    - mkdir -p modules/gmGraphics/resources/
    - make
    - ./test/gmCore/test_gmCore
    - ./test/gmMisc/test_gmMisc
    - ./test/gmNetwork/test_gmNetwork
    - ./test/gmTouch/test_gmTouch
    - ./test/gmTrack/test_gmTrack
    - make test
    - make package
  artifacts:
    paths: ['build/*gramods*.deb']

TestInstall:
  image: $CI_REGISTRY/karlu20/gramods:20.04-mini
  stage: test
  script:
    - apt update
    - apt install -y ./build/*gramods*.deb
  dependencies:
    - BuildMaxi
